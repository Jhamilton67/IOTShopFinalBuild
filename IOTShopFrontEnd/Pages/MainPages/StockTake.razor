@page "/StockTake"

@using IOTShopDataAccess
@using IOTShopDataAccess.Models
@using IOTShopDataAccess.Data
@using IOTShopFrontEnd.Models

@inject IStockTakeData _stock

<AuthorizeView>
    <Authorized>
        <div class="jumbotron">
            <h1>StockTake</h1>
            <br />
            <div class="">
                <h3>@DateTime.Now</h3>
                <p>TimeStamp of When Last Stock Take Was Done</p>
            </div>
        </div>

        <body style="background-color:sandybrown">

            <br />
            <button class="btn btn-primary" @onclick="UpdateData">Update Data</button>
            <button class="btn btn-primary" @onclick="DeleteData">Delete Data</button>
            <br />
            <br />
           
            <br />

            @if (stocks is null)
            {
                <p><em>Loading Data....</em></p>
            }
            else
            {
                <table  class="table table-secondary">
                    <thead>
                        <tr>
                            <th>
                                StockTakeCount
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var stock in stocks)
                        {
                            <tr>
                                <td>@stock.StockTakeCount</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
                <br />
                <table class="table table-secondary">
                    <thead>
                        <tr>
                            <th>Stock ID</th>
                            <th>Stock Type</th>
                            <th>Stock Type Colour</th>
                            <th>Stock Type Size </th>
                            <th>Stock Type Quantity</th>
                            <th>Stock Type Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var stock in stocks)
                        {
                            <tr>
                                <td>@stock.StockID</td>
                                <td>@stock.StockType</td>
                                <td>@stock.StockTypeColour</td>
                                <td>@stock.StockTypeSize</td>
                                <td>@stock.StockTypeQuantity</td>
                                <td>@stock.StockTypePrice</td>
                            </tr>
                        }
                    </tbody>
                </table>

            }
        </body>
    </Authorized>
    <NotAuthorized>
        <body style="background-color:sandybrown">
            <div class="jumbotron-fluid">
                <div class="alert alert-danger" role="alert">
                    <p>
                        Please Login.

                        If you're Having Trouble with Logging in Please Contact Admin Support.
                    </p>

                </div>
            </div>

        </body>
    </NotAuthorized>
</AuthorizeView>

@code {

    private List<StockTakeModel> stocks;

   

    protected async Task UpdateData()
    {

        //stocks = await _stock.UpdateStockTake();
    }

    private async Task DeleteData()
    {
       // stocks = await _stock.DeleteStockTake();
    }


    protected override async Task OnInitializedAsync()
    {

        stocks = await _stock.GetStockTakes();

    }

}

